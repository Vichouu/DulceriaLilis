"""
Django settings for Dulceria project.

Generated by 'django-admin startproject' using Django 5.2.5.
"""

from pathlib import Path
from pathlib import Path
import os
from dotenv import load_dotenv
import pymysql

# Cargar variables de entorno

BASE_DIR = Path(__file__).resolve().parent.parent
load_dotenv(BASE_DIR / ".env")  # ← carga el .env

# --- Desarrollo  ---
SECRET_KEY = 'django-insecure-wq64!%*zk#=w*==i--^ofwl-t&ng#q$3x76ya0ym$#)2)_+@u^'
DEBUG = True
ALLOWED_HOSTS: list[str] = []  # agrega dominios/hosts si despliegas

# --- Apps instaladas ---
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'inventario',
    'catalogo',
    'usuarios',
    'proveedores',
    'pedidos_de_venta',
    'accounts',
]

# --- Middleware ---
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# Paquete del proyecto
ROOT_URLCONF = 'DulceriaLilis.urls'

# --- Templates ---
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # Carpeta raíz de templates (en la raíz del proyecto, con T mayúscula)
        'DIRS': [ BASE_DIR / 'Templates' ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI/ASGI
WSGI_APPLICATION = 'DulceriaLilis.wsgi.application'
# ASGI_APPLICATION = 'DulceriaLilis.asgi.application'  # si lo usas

# URLs de autenticación
LOGIN_URL = "login"
LOGIN_REDIRECT_URL = "empresa"
LOGOUT_REDIRECT_URL = "login"

#CONFIGURACIÓN DE SESIONES
SESSION_COOKIE_AGE = 3600             
SESSION_SAVE_EVERY_REQUEST = True      
SESSION_EXPIRE_AT_BROWSER_CLOSE = False 

# --- Base de datos (Mysql) ---
pymysql.install_as_MySQLdb()

ENGINE = os.getenv("DB_ENGINE", "mysql")

if ENGINE == "mysql":
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.mysql",
            "NAME": os.getenv("DB_NAME"),
            "USER": os.getenv("DB_USER"),
            "PASSWORD": os.getenv("DB_PASSWORD"),
            "HOST": os.getenv("DB_HOST", "localhost"),
            "PORT": os.getenv("DB_PORT", "3306"),
            "OPTIONS": {"charset": "utf8mb4"},
        }
    }
else:  # SQLite por defecto
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": BASE_DIR / os.getenv("DB_NAME", "db.sqlite3"),
        }
    }

# --- Validadores de contraseña ---
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# --- Internacionalización ---
LANGUAGE_CODE = 'es-cl'
TIME_ZONE = 'America/Santiago'
USE_I18N = True
USE_TZ = True

# --- Archivos estáticos ---
STATIC_URL = 'static/'
# Carpeta Static/ en la raíz (con S mayúscula)
STATICFILES_DIRS = [ BASE_DIR / 'Static' ]

# --- Clave primaria por defecto ---
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
